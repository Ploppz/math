use node::*;
use builder::Builder;

grammar<'b>(builder: &'b Builder);

pub Expr: NodeRc = {
    <l:Expr> "+" <r:Factor> => builder.add(l, r),
    <l:Expr> "-" <r:Factor> => builder.sub(l, r),
    Factor,
};

pub Factor: NodeRc = {
    <l:Num> <r:Pow> => builder.mul(l, r),
    <l:Factor> "*" <r:Pow> => builder.mul(l, r),
    <l:Factor> "Â·" <r:Pow> => builder.mul(l, r),
    <l:Factor> "/" <r:Pow> => builder.div(l, r),
    Pow,
};

pub Pow: NodeRc = {
    <b:Term> "^" <e:Term> => builder.pow(b, e),
    <f:r"[[:alpha:]]+"> "(" <g:Expr> ")" => builder.function(f, g),
    Term,
};

pub Term: NodeRc = {
    Num,
    Var,
    "(" <Expr> ")",
};

Num: NodeRc = <s:r"[0-9]+"> => builder.decimal(s);
Var: NodeRc = <s:r"[[:alpha:]]+"> => builder.var(s);
